/*****************************
* AUTHOR: Elyasaf Cohen      *
* ID:     311557227          *
* SUBJECT: Targil 7          *
*                            *
******************************/
#pragma once
#include"Point.h"
#include <iostream>
using namespace std;
///------------------------------------------------ Shape אנחנו בקובץ ההדר של  -----------------------------------------------------///
/*

	 מחלקה תוגדר להיות אבסטרקטית אם לפחות אחת
			הפונקציות בה היא וירטואלית טהורה

 לא ניתן להגדיר עצמים של מחלקה אבסטרקטית, אלא
	  .רק מצביע או הפניה לעצם ממחלקה אבסטרקטי

	כל מחלקה יורשת צריכה לספק מימוש לפונקציה
							 הווירטואלית טהורה

  מחלקה יורשת שאינה מממשת פונקציה וירטואלית
		טהורה, הופכת אף היא למחלקה אבסטרקטית

*/

//------------------------- Shape פתיחת מחלקת האב האבסטרקטית --------------------------//
class Shape {

protected:
	int num_of_points; // מס הקודקודים
	Point* p; // מצביע למערך של קודקודים

public:

	//---------------- default-constructor -----------------//
	Shape();
	//------------------- constructor ----------------------//
	Shape(int my_num_of_points);
	//----------------- copy constructor -------------------//
	Shape(const Shape& my_shape);
	//----------------- move-constructor -------------------//
	Shape(Shape&& my_shape);
	//---------------- virtual destructor ------------------//
	virtual~Shape();
	//-------------- << פונקציה חברה - אופרטור פלט -----------------//
	friend ostream& operator <<(ostream& os, const Shape& my_shape);



	//-------------------------------------------------------------//
	// פונקציות ורטואליות טהורות כיוון שלכל צורה מימוש שונה    //
	// ואנחנו לא רוצים לממש אותן פה אלא רק לרשת אותן ולממש     // 
	// כל אחת מהן בנפרד במחלקות הרלוונטיות של כל צורה          //
	//------------------------------------------------------------//

	//------------------- חישוב שטח --------------------//
	virtual float area()const = 0;
	//------------------- בדיקת תכונה מיוחדת --------------------//
	virtual bool isSpecial()const = 0;
	//------------------- הדפסת התכונה מיוחדת --------------------//
	virtual void printSpecial()const = 0;
};